- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql


  
- name: create a user for nodejs
  ansible.builtin.user:
    name: expense

- name: include from another role
  include_role:
    name: common
    tasks_from: main

# - name: create /app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: download and unarchive app
#   ansible.builtin.unarchive:
#     src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /app
#     remote_src: yes

- name: run npm to install dependencies
  community.general.npm:
    path: "{{ app_location }}"

- name: copy backend service to the path
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
  notify:
  - restart backend
    

- name: install python libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL
  - cryptography

- name: set the schema from backend to mysql
  community.mysql.mysql_db:
    name: all
    state: import
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: mysql.vijayjohn.online
    target: /app/schema/backend.sql
  notify:
  - restart backend

# - name: daemon-reload as backend.service is set up
#   ansible.builtin.systemd_service:
#     enabled: true
#     state: restarted
#     daemon_reload: true
#     name: backend
    
    

  

  